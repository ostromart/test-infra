plank:
  job_url_template: 'https://gubernator-internal.googleplex.com/build/{{if eq .Spec.Refs.Org "elafros"}}ela-prow{{else}}gke-prow{{end}}/{{if eq .Spec.Type "presubmit"}}pr-logs/pull{{else if eq .Spec.Type "batch"}}pr-logs/pull{{else}}logs{{end}}{{if ne .Spec.Refs.Org ""}}{{if ne .Spec.Refs.Org "kubernetes"}}/{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}{{else if ne .Spec.Refs.Repo "kubernetes"}}/{{.Spec.Refs.Repo}}{{end}}{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  report_template: '[Full PR test history](https://gubernator-internal.googleplex.com/pr/{{if eq .Spec.Refs.Org "kubernetes"}}{{if eq .Spec.Refs.Repo "kubernetes"}}{{else}}{{.Spec.Refs.Repo}}/{{end}}{{else}}{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}/{{end}}{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}). [Your PR dashboard](https://gubernator-internal.googleplex.com/pr/{{with index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}).'
  pod_pending_timeout: 60m

prowjob_namespace: default
pod_namespace: test-pods
log_level: info

tide:
  queries:
  - repos:
    - GoogleCloudPlatform/k8s-tpu-operator
    - elafros/build
    - elafros/elafros
    - elafros/eventing
    - elafros/install
    labels:
    - lgtm
    - approved
    missingLabels:
    - do-not-merge/hold
    - do-not-merge/work-in-progress
  merge_method:
    elafros: squash
  target_url: https://prow-internal.gcpnode.com/tide.html

presets:
- labels:
    preset-service-account: true
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/service-account/service-account.json
  volumes:
  - name: service
    secret:
      secretName: service-account
  volumeMounts:
  - name: service
    mountPath: /etc/service-account
    readOnly: true
- labels:
    preset-k8s-ssh: true
  env:
  - name: USER
    value: prow
  - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
    value: /etc/ssh-key-secret/ssh-private
  - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
    value: /etc/ssh-key-secret/ssh-public
  volumes:
  - name: ssh
    secret:
      defaultMode: 0400
      secretName: ssh-key-secret
  volumeMounts:
  - name: ssh
    mountPath: /etc/ssh-key-secret
    readOnly: true
# storage / caching presets
- labels:
    preset-bazel-scratch-dir: true
  env:
  - name: TEST_TMPDIR
    value: /bazel-scratch/.cache/bazel
  volumes:
  - name: bazel-scratch
    emptyDir: {}
  volumeMounts:
  - name: bazel-scratch
    mountPath: /bazel-scratch/.cache
- labels:
    preset-bazel-remote-cache-enabled: true
  env:
  - name: BAZEL_REMOTE_CACHE_ENABLED
    value: "true"

presubmits:
  elafros/elafros:
  - name: pull-elafros-elafros-test
    agent: kubernetes
    context: pull-elafros-elafros-test
    always_run: true
    rerun_command: "/test pull-elafros-elafros-test"
    trigger: "(?m)^/test( all| pull-elafros-elafros-test),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-bazel-scratch-dir: true
      preset-bazel-remote-cache-enabled: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180418-79a97ca02-experimental
        args:
        - "--ssh=/etc/ssh-elafros/ssh-elafros"
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://ela-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./test/presubmit-tests.sh"
        env:
        - name: USER
          value: prow
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
        volumeMounts:
        - mountPath: /etc/ssh-elafros
          name: ssh-elafros
      volumes:
      - name: ssh-elafros
        secret:
          defaultMode: 256
          secretName: ssh-elafros

  - name: pull-elafros-go-coverage-test
    agent: kubernetes
    context: pull-elafros-go-coverage-test
    always_run: true
    rerun_command: "/test pull-elafros-go-coverage-test"
    trigger: "(?m)^/( all|test pull-elafros-go-coverage-test),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-bazel-scratch-dir: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master
        args:
        - "--ssh=/etc/ssh-elafros/ssh-elafros"
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://ela-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./hack/project-coverage.sh"
        env:
        - name: USER
          value: prow
        volumeMounts:
        - mountPath: /etc/ssh-elafros
          name: ssh-elafros
      volumes:
      - name: ssh-elafros
        secret:
          defaultMode: 256
          secretName: ssh-elafros

  elafros/build:
  - name: pull-elafros-build-test
    agent: kubernetes
    context: pull-elafros-build-test
    always_run: true
    rerun_command: "/test pull-elafros-build-test"
    trigger: "(?m)^/test( all| pull-elafros-build-test),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-bazel-scratch-dir: true
      preset-bazel-remote-cache-enabled: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180418-79a97ca02-experimental
        args:
        - "--ssh=/etc/ssh-elafros/ssh-elafros"
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://ela-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./tests/presubmit-tests.sh"
        env:
        - name: USER
          value: prow
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
        volumeMounts:
        - mountPath: /etc/ssh-elafros
          name: ssh-elafros
      volumes:
      - name: ssh-elafros
        secret:
          defaultMode: 256
          secretName: ssh-elafros

  https://gke-internal-review.googlesource.com/test-infra:
  - name: pull-test-infra-presubmit
    agent: kubernetes
    context: pull-test-infra-presubmit
    always_run: true
    rerun_command: "/test pull-test-infra-presubmit"
    trigger: "(?m)^/test( all| pull-test-infra-presubmit),?(\\s+|$)"
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master
        args:
        - --clean
        - --repo=gke-internal.googlesource.com/test-infra=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://gke-prow/pr-logs
        - --scenario=execute
        - -- # end bootstrap args, scenario args below
        - echo
        - 'test-infra presubmit placeholder'

  GoogleCloudPlatform/k8s-tpu-operator:
  - name: pull-k8s-tpu-operator-unit
    agent: kubernetes
    context: pull-k8s-tpu-operator-unit
    always_run: true
    rerun_command: /test pull-k8s-tpu-operator-unit
    trigger: (?m)^/test( all| pull-k8s-tpu-operator-unit),?(\s+|$)
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master
        args:
        - --clean
        - --repo=github.com/GoogleCloudPlatform/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://gke-prow/pr-logs
        - --ssh=/etc/tpu-ssh/ssh-elafros
        - --scenario=execute
        - -- # end bootstrap args, scenario args below
        - make
        - test
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/tpu-ssh
          name: tpu-ssh
        - mountPath: /docker-graph
          name: docker-graph
      volumes:
      - name: tpu-ssh
        secret:
          defaultMode: 0400
          secretName: ssh-elafros
      - name: docker-graph
        emptyDir: {}
  - name: pull-k8s-tpu-operator-verify
    agent: kubernetes
    context: pull-k8s-tpu-operator-verify
    always_run: true
    rerun_command: /test pull-k8s-tpu-operator-verify
    trigger: (?m)^/test( all| pull-k8s-tpu-operator-verify),?(\s+|$)
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master
        args:
        - --clean
        - --repo=github.com/GoogleCloudPlatform/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://gke-prow/pr-logs
        - --ssh=/etc/tpu-ssh/ssh-elafros
        - --scenario=execute
        - -- # end bootstrap args, scenario args below
        - make
        - verify
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/tpu-ssh
          name: tpu-ssh
        - mountPath: /docker-graph
          name: docker-graph
      volumes:
      - name: tpu-ssh
        secret:
          defaultMode: 0400
          secretName: ssh-elafros
      - name: docker-graph
        emptyDir: {}

periodics:
- interval: 1h
  name: ci-kubernetes-bazel-test
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-bazel-scratch-dir: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.10.0
      args:
      - --clean
      - --job=$(JOB_NAME)
      - --repo=gke-internal.googlesource.com/kubernetes
      - --service-account=/etc/service-account/service-account.json
      - --upload=gs://gke-prow/logs
      - --scenario=kubernetes_bazel
      - -- # end bootstrap args, scenario args below
      - --test=//... -//build/... -//vendor/...
      - --manual-test=//hack:verify-all
      - --test-args=--config=unit
      - --test-args=--build_tag_filters=-e2e,-integration
      - --test-args=--test_tag_filters=-e2e,-integration
      - --test-args=--flaky_test_attempts=3
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"
- interval: 30m
  name: ci-kubernetes-build
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
      args:
      - --clean
      - --repo=gke-internal.googlesource.com/kubernetes
      - --repo=k8s.io/release
      - --root=/go/src
      - --timeout=30
      - --scenario=kubernetes_build
      - --upload=gs://gke-prow/logs
      - --
      - --fast
      - --release=gke-prow
      - --push-build-script=../../k8s.io/release/push-build.sh
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      resources:
        requests:
          cpu: 3
          memory: "8Gi"
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
    volumes:
    - name: docker-graph
      emptyDir: {}
- interval: 1h
  name: ci-kubernetes-integration
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
      args:
      - --clean
      - --repo=gke-internal.googlesource.com/kubernetes
      - --timeout=100
      - --scenario=kubernetes_verify
      - --upload=gs://gke-prow/logs
      - --
      - --branch=master
      - --force
      - --prow
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      resources:
        requests:
          cpu: 3
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
    volumes:
    - name: docker-graph
      emptyDir: {}
- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gob-gke
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      - --upload=gs://gke-prow/logs
      - --scenario=kubernetes_e2e
      - --
      - --check-leaked-resources
      - --cluster=
      - --deployment=gke
      - --extract=gs://gke-prow/ci/latest.txt
      - --gcp-cloud-sdk=gs://cloud-sdk-testing/ci/staging
      - --gcp-node-image=gci
      - --gcp-zone=us-central1-f
      - --ginkgo-parallel
      - --gke-environment=test
      - --provider=gke
      - --test_args=--ginkgo.skip=\\[Slow\\]|\\[Serial\\]|\\[Disruptive\\]|\\[Flaky\\]|\\[Feature:.+\\] --minStartupPods=8
      - --timeout=50m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master
- cron: "1 * * * *" # Run every hour and one minute
  name: ci-elafros-elafros-continuous
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-bazel-scratch-dir: true
    preset-bazel-remote-cache-enabled: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180418-79a97ca02-experimental
      args:
      - "--ssh=/etc/ssh-elafros/ssh-elafros"
      - "--scenario=kubernetes_execute_bazel"
      - "--clean"
      - "--job=$(JOB_NAME)"
      - "--repo=github.com/elafros/elafros"
      - "--root=/go/src"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://ela-prow/logs"
      - "--timeout=50" # Avoid overrun
      - "--" # end bootstrap args, scenario args below
      - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
      - "./test/presubmit-tests.sh"
      env:
      - name: USER
        value: prow
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"
      volumeMounts:
      - mountPath: /etc/ssh-elafros
        name: ssh-elafros
    volumes:
     - name: ssh-elafros
       secret:
         defaultMode: 256
         secretName: ssh-elafros
- cron: "1 6 * * *" # Run at 23:01PST every day (06:01 UTC following day)
  name: ci-elafros-elafros-release
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-bazel-scratch-dir: true
    preset-bazel-remote-cache-enabled: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180418-79a97ca02-experimental
      args:
      - "--ssh=/etc/ssh-elafros/ssh-elafros"
      - "--scenario=kubernetes_execute_bazel"
      - "--clean"
      - "--job=$(JOB_NAME)"
      - "--repo=github.com/elafros/elafros"
      - "--root=/go/src"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://ela-prow/logs"
      - "--timeout=90" # 1.5h
      - "--" # end bootstrap args, scenario args below
      - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
      - "./hack/release.sh"
      env:
      - name: USER
        value: prow
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"
      volumeMounts:
      - mountPath: /etc/ssh-elafros
        name: ssh-elafros
    volumes:
     - name: ssh-elafros
       secret:
         defaultMode: 256
         secretName: ssh-elafros
- cron: "1 8 * * 6" # Run at 01:01PST every Saturday (08:01 UTC Saturday)
  name: ci-elafros-elafros-playground
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-bazel-scratch-dir: true
    preset-bazel-remote-cache-enabled: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180418-79a97ca02-experimental
      args:
      - "--ssh=/etc/ssh-elafros/ssh-elafros"
      - "--scenario=kubernetes_execute_bazel"
      - "--clean"
      - "--job=$(JOB_NAME)"
      - "--repo=github.com/elafros/elafros"
      - "--root=/go/src"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://ela-prow/logs"
      - "--timeout=90" # 1.5h
      - "--" # end bootstrap args, scenario args below
      - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
      - "./hack/deploy.sh"
      - "elafros-playground"
      env:
      - name: USER
        value: prow
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"
      volumeMounts:
      - mountPath: /etc/ssh-elafros
        name: ssh-elafros
    volumes:
     - name: ssh-elafros
       secret:
         defaultMode: 256
         secretName: ssh-elafros
# TODO(syzf) remove the job coverage-elafros-elafros-periodical after the coverage app uses the head
# of post-submit commit ID for display on dashboard
- cron: "1 * * * *" #Run at the first minute of each hour
  name: coverage-elafros-elafros-periodical
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-bazel-scratch-dir: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master
      args:
      - "--ssh=/etc/ssh-elafros/ssh-elafros"
      - "--scenario=kubernetes_execute_bazel"
      - "--clean"
      - "--job=$(JOB_NAME)"
      - "--repo=github.com/elafros/elafros"
      - "--root=/go/src"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://ela-prow/logs"
      - "--timeout=90" # 1.5h
      - "--" # end bootstrap args, scenario args below
      - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
      - "./hack/coverage.sh"
      - "newest.txt" # the argument is the name of the profile
      env:
      - name: USER
        value: prow
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "1Gi"
      volumeMounts:
      - mountPath: /etc/ssh-elafros
        name: ssh-elafros
    volumes:
     - name: ssh-elafros
       secret:
         defaultMode: 256
         secretName: ssh-elafros
- cron: "31 6 * * *" # Run at 23:31PST every day (06:31 UTC following day)
  name: ci-elafros-build-release
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-bazel-scratch-dir: true
    preset-bazel-remote-cache-enabled: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180418-79a97ca02-experimental
      args:
      - "--ssh=/etc/ssh-elafros/ssh-elafros"
      - "--scenario=kubernetes_execute_bazel"
      - "--clean"
      - "--job=$(JOB_NAME)"
      - "--repo=github.com/elafros/build"
      - "--root=/go/src"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://ela-prow/logs"
      - "--timeout=90" # 1.5h
      - "--" # end bootstrap args, scenario args below
      - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
      - "./hack/release.sh"
      env:
      - name: USER
        value: prow
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"
      volumeMounts:
      - mountPath: /etc/ssh-elafros
        name: ssh-elafros
    volumes:
     - name: ssh-elafros
       secret:
         defaultMode: 256
         secretName: ssh-elafros

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-ci-master
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      - --scenario=kubernetes_e2e
      - --upload=gs://gke-prow/logs
      - --
      - --check-leaked-resources
      - --extract=gci/gci-canary/latest
      - --gcp-project-type=gci-qa-project
      - --gcp-zone=us-central1-f
      - --ginkgo-parallel=25
      - --provider=gce
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=50m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-ci-serial-master
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      - --scenario=kubernetes_e2e
      - --upload=gs://gke-prow/logs
      - --
      - --check-leaked-resources
      - --extract=gci/gci-canary/latest
      - --gcp-project-type=gci-qa-project
      - --gcp-zone=us-central1-f
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Serial\]|\[Disruptive\] --ginkgo.skip=\[Flaky\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=300m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-ci-slow-master
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      - --scenario=kubernetes_e2e
      - --upload=gs://gke-prow/logs
      - --
      - --check-leaked-resources
      - --extract=gci/gci-canary/latest
      - --gcp-project-type=gci-qa-project
      - --gcp-zone=us-central1-f
      - --ginkgo-parallel=25
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Slow\] --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=150m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-m65
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      - --scenario=kubernetes_e2e
      - --upload=gs://gke-prow/logs
      - --
      - --check-leaked-resources
      - --extract=gci/gci-65/latest-1.8
      - --gcp-project-type=gci-qa-project
      - --gcp-zone=us-central1-f
      - --ginkgo-parallel=25
      - --provider=gce
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=50m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-m66
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      - --scenario=kubernetes_e2e
      - --upload=gs://gke-prow/logs
      - --
      - --check-leaked-resources
      - --extract=gci/gci-66/latest-1.9
      - --gcp-project-type=gci-qa-project
      - --gcp-zone=us-central1-f
      - --ginkgo-parallel=25
      - --provider=gce
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=50m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-m67
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      - --scenario=kubernetes_e2e
      - --upload=gs://gke-prow/logs
      - --
      - --check-leaked-resources
      - --extract=gci/gci-67
      - --gcp-project-type=gci-qa-project
      - --gcp-zone=us-central1-f
      - --ginkgo-parallel=25
      - --provider=gce
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=50m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-master
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      - --scenario=kubernetes_e2e
      - --upload=gs://gke-prow/logs
      - --
      - --check-leaked-resources
      - --extract=gci/gci-canary
      - --gcp-project-type=gci-qa-project
      - --gcp-zone=us-central1-f
      - --ginkgo-parallel=25
      - --provider=gce
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=50m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-serial-m65
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      - --scenario=kubernetes_e2e
      - --upload=gs://gke-prow/logs
      - --
      - --check-leaked-resources
      - --extract=gci/gci-65/latest-1.8
      - --gcp-project-type=gci-qa-project
      - --gcp-zone=us-central1-f
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Serial\]|\[Disruptive\] --ginkgo.skip=\[Flaky\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=300m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-serial-m66
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      - --scenario=kubernetes_e2e
      - --upload=gs://gke-prow/logs
      - --
      - --check-leaked-resources
      - --extract=gci/gci-66/latest-1.9
      - --gcp-project-type=gci-qa-project
      - --gcp-zone=us-central1-f
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Serial\]|\[Disruptive\] --ginkgo.skip=\[Flaky\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=300m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-serial-m67
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      - --scenario=kubernetes_e2e
      - --upload=gs://gke-prow/logs
      - --
      - --check-leaked-resources
      - --extract=gci/gci-67
      - --gcp-project-type=gci-qa-project
      - --gcp-zone=us-central1-f
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Serial\]|\[Disruptive\] --ginkgo.skip=\[Flaky\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=300m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-serial-master
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      - --scenario=kubernetes_e2e
      - --upload=gs://gke-prow/logs
      - --
      - --check-leaked-resources
      - --extract=gci/gci-canary
      - --gcp-project-type=gci-qa-project
      - --gcp-zone=us-central1-f
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Serial\]|\[Disruptive\] --ginkgo.skip=\[Flaky\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=300m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-slow-m65
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      - --scenario=kubernetes_e2e
      - --upload=gs://gke-prow/logs
      - --
      - --check-leaked-resources
      - --extract=gci/gci-65/latest-1.8
      - --gcp-project-type=gci-qa-project
      - --gcp-zone=us-central1-f
      - --ginkgo-parallel=25
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Slow\] --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=150m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-slow-m66
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      - --scenario=kubernetes_e2e
      - --upload=gs://gke-prow/logs
      - --
      - --check-leaked-resources
      - --extract=gci/gci-66/latest-1.9
      - --gcp-project-type=gci-qa-project
      - --gcp-zone=us-central1-f
      - --ginkgo-parallel=25
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Slow\] --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=150m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-slow-m67
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      - --scenario=kubernetes_e2e
      - --upload=gs://gke-prow/logs
      - --
      - --check-leaked-resources
      - --extract=gci/gci-67
      - --gcp-project-type=gci-qa-project
      - --gcp-zone=us-central1-f
      - --ginkgo-parallel=25
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Slow\] --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=150m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-slow-master
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      - --scenario=kubernetes_e2e
      - --upload=gs://gke-prow/logs
      - --
      - --check-leaked-resources
      - --extract=gci/gci-canary
      - --gcp-project-type=gci-qa-project
      - --gcp-zone=us-central1-f
      - --ginkgo-parallel=25
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Slow\] --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=150m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master

# COS Docker validation tests.
- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-cos-docker-validation
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      - --scenario=kubernetes_e2e
      - --upload=gs://gke-prow/logs
      - --
      - --check-leaked-resources
      - --extract=gci/gci-next-canary
      - --gcp-master-image=gci
      - --gcp-node-image=gci
      - --gcp-project-type=gci-qa-project
      - --gcp-zone=us-central1-f
      - --ginkgo-parallel=25
      - --provider=gce
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=50m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-cos-docker-validation-serial
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      - --scenario=kubernetes_e2e
      - --upload=gs://gke-prow/logs
      - --
      - --check-leaked-resources
      - --extract=gci/gci-next-canary
      - --gcp-master-image=gci
      - --gcp-node-image=gci
      - --gcp-project-type=gci-qa-project
      - --gcp-zone=us-central1-f
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Serial\]|\[Disruptive\] --ginkgo.skip=\[Flaky\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=300m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-cos-docker-validation-slow
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      - --scenario=kubernetes_e2e
      - --upload=gs://gke-prow/logs
      - --
      - --check-leaked-resources
      - --extract=gci/gci-next-canary
      - --gcp-master-image=gci
      - --gcp-node-image=gci
      - --gcp-project-type=gci-qa-project
      - --gcp-zone=us-central1-f
      - --ginkgo-parallel=25
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Slow\] --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=150m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-soak-cos-docker-validation
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      - --scenario=kubernetes_e2e
      - --upload=gs://gke-prow/logs
      - --
      - --down=false
      - --env=DOCKER_TEST_LOG_LEVEL=--log-level=warn
      - --extract=gci/gci-next-canary
      - --gcp-master-image=gci
      - --gcp-node-image=gci
      - --gcp-project-type=gci-qa-project
      - --gcp-zone=us-central1-f
      - --provider=gce
      - --save=gs://gke-prow/soak/ci-kubernetes-soak-cos-docker-validation
      - --soak
      - --test_args=--ginkgo.skip=\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --clean-start=true --minStartupPods=8
      - --timeout=600m
      - --up=false
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master

postsubmits:
  elafros/elafros:
  - name: coverage-postsubmit
    agent: kubernetes
    labels:
      preset-service-account: true
      preset-bazel-scratch-dir: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180322-179eac85b-experimental
        args:
        - "--ssh=/etc/ssh-elafros/ssh-elafros"
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://ela-prow/logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./hack/project-coverage.sh"
        env:
        - name: USER
          value: prow
        volumeMounts:
        - mountPath: /etc/ssh-elafros
          name: ssh-elafros
      volumes:
      - name: ssh-elafros
        secret:
          defaultMode: 256
          secretName: ssh-elafros

  GoogleCloudPlatform/k8s-tpu-operator:
  - name: k8s-tpu-operator-image-push
    agent: kubernetes
    branches:
    - master
    - release-0.0
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master
        args:
        - --clean
        - --repo=github.com/GoogleCloudPlatform/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://gke-prow/logs
        - --ssh=/etc/tpu-ssh/ssh-elafros
        - --scenario=execute
        - -- # end bootstrap args, scenario args below
        - make
        - push
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/tpu-ssh
          name: tpu-ssh
        - mountPath: /docker-graph
          name: docker-graph
      volumes:
      - name: tpu-ssh
        secret:
          defaultMode: 0400
          secretName: ssh-elafros
      - name: docker-graph
        emptyDir: {}
