plank:
  job_url_template: 'https://gubernator-internal.googleplex.com/build/gke-prow/{{if eq .Spec.Type "presubmit"}}pr-logs/pull{{else if eq .Spec.Type "batch"}}pr-logs/pull{{else}}logs{{end}}{{if ne .Spec.Refs.Org ""}}{{if ne .Spec.Refs.Org "kubernetes"}}/{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}{{else if ne .Spec.Refs.Repo "kubernetes"}}/{{.Spec.Refs.Repo}}{{end}}{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  report_template: '[Full PR test history](https://gubernator-internal.googleplex.com/pr/{{if eq .Spec.Refs.Org "kubernetes"}}{{if eq .Spec.Refs.Repo "kubernetes"}}{{else}}{{.Spec.Refs.Repo}}/{{end}}{{else}}{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}/{{end}}{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}). [Your PR dashboard](https://gubernator-internal.googleplex.com/pr/{{with index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}).'
  pod_pending_timeout: 60m

prowjob_namespace: default
pod_namespace: test-pods
log_level: info

presets:
- labels:
    preset-service-account: true
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/service-account/service-account.json
  volumes:
  - name: service
    secret:
      secretName: service-account
  volumeMounts:
  - name: service
    mountPath: /etc/service-account
    readOnly: true
- labels:
    preset-k8s-ssh: true
  env:
  - name: USER
    value: prow
  - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
    value: /etc/ssh-key-secret/ssh-private
  - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
    value: /etc/ssh-key-secret/ssh-public
  volumes:
  - name: ssh
    secret:
      defaultMode: 0400
      secretName: ssh-key-secret
  volumeMounts:
  - name: ssh
    mountPath: /etc/ssh-key-secret
    readOnly: true
# storage / caching presets
- labels:
    preset-bazel-scratch-dir: true
  env:
  - name: TEST_TMPDIR
    value: /bazel-scratch/.cache/bazel
  volumes:
  - name: bazel-scratch
    emptyDir: {}
  volumeMounts:
  - name: bazel-scratch
    mountPath: /bazel-scratch/.cache

presubmits:
  elafros/elafros:
  - name: pull-elafros-bazel-test
    agent: kubernetes
    context: pull-elafros-bazel-test
    always_run: true
    rerun_command: "/test pull-elafros-bazel-test"
    trigger: "(?m)^/test( all| pull-elafros-bazel-test),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-bazel-scratch-dir: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180228-dabde9ed5-master
        args:
        - "--ssh=/etc/ssh-elafros/ssh-elafros"
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://gke-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "bazel"
        - "test"
        - "--workspace_status_command="
        - "//pkg/..."
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
        volumeMounts:
        - mountPath: /etc/ssh-elafros
          name: ssh-elafros
      volumes:
      - name: ssh-elafros
        secret:
          defaultMode: 256
          secretName: ssh-elafros

  elafros/build:
  - name: pull-elafros-build-test
    agent: kubernetes
    context: pull-elafros-build-test
    always_run: true
    rerun_command: "/test pull-elafros-build-test"
    trigger: "(?m)^/test( all| pull-elafros-build-test),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-bazel-scratch-dir: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180228-dabde9ed5-master
        args:
        - "--ssh=/etc/ssh-elafros/ssh-elafros"
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://gke-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "tests/presubmit-tests.sh"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
        volumeMounts:
        - mountPath: /etc/ssh-elafros
          name: ssh-elafros
      volumes:
      - name: ssh-elafros
        secret:
          defaultMode: 256
          secretName: ssh-elafros

  gke-internal.googlesource.com/test-infra:
  - name: pull-test-infra-presubmit
    agent: kubernetes
    context: pull-test-infra-presubmit
    always_run: true
    rerun_command: "/test pull-test-infra-presubmit"
    trigger: "(?m)^/test( all| pull-test-infra-presubmit),?(\\s+|$)"
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180228-dabde9ed5-master
        args:
        - --clean
        - --repo=gke-internal.googlesource.com/kubernetes
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://gke-prow/logs
        - --scenario=execute
        - -- # end bootstrap args, scenario args below
        - echo
        - 'test-infra presubmit placeholder'


periodics:
- interval: 1h
  name: ci-kubernetes-bazel-test
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-bazel-scratch-dir: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.10.0
      args:
      - --clean
      - --job=$(JOB_NAME)
      - --repo=gke-internal.googlesource.com/kubernetes
      - --service-account=/etc/service-account/service-account.json
      - --upload=gs://gke-prow/logs
      - --scenario=kubernetes_bazel
      - -- # end bootstrap args, scenario args below
      - --test=//... -//build/... -//vendor/...
      - --manual-test=//hack:verify-all
      - --test-args=--config=unit
      - --test-args=--build_tag_filters=-e2e,-integration
      - --test-args=--test_tag_filters=-e2e,-integration
      - --test-args=--flaky_test_attempts=3
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"
- interval: 30m
  name: ci-kubernetes-build
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
      args:
      - --clean
      - --repo=gke-internal.googlesource.com/kubernetes
      - --repo=k8s.io/release
      - --root=/go/src
      - --timeout=30
      - --scenario=kubernetes_build
      - --upload=gs://gke-prow/logs
      - --
      - --fast
      - --release=gke-prow
      - --push-build-script=../../k8s.io/release/push-build.sh
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      resources:
        requests:
          cpu: 3
          memory: "8Gi"
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
    volumes:
    - name: docker-graph
      emptyDir: {}
- interval: 1h
  name: ci-kubernetes-integration
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
      args:
      - --clean
      - --repo=gke-internal.googlesource.com/kubernetes
      - --timeout=100
      - --scenario=kubernetes_verify
      - --upload=gs://gke-prow/logs
      - --
      - --branch=master
      - --force
      - --prow
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      resources:
        requests:
          cpu: 3
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
    volumes:
    - name: docker-graph
      emptyDir: {}
- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gob-gke
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      - --scenario=kubernetes_e2e
      - --
      - --check-leaked-resources
      - --cluster=
      - --deployment=gke
      - --extract=gs://gke-prow/ci/latest.txt
      - --gcp-cloud-sdk=gs://cloud-sdk-testing/ci/staging
      - --gcp-node-image=gci
      - --gcp-zone=us-central1-f
      - --ginkgo-parallel
      - --gke-environment=test
      - --provider=gke
      - --test_args=--ginkgo.skip=\\[Slow\\]|\\[Serial\\]|\\[Disruptive\\]|\\[Flaky\\]|\\[Feature:.+\\] --minStartupPods=8
      - --timeout=50m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180312-a6be97dc1-master
