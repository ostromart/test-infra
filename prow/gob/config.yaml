plank:
  job_url_template: 'https://gubernator-internal.googleplex.com/build/{{with .Spec.Refs}}{{if eq .Repo "syllogi/cluster-management"}}syllogi-gob-prow{{else if eq .Repo "alphabetcloud/galu"}}galu-gob-prow{{else}}gob-prow{{end}}{{else}}gob-prow{{end}}/{{if or (eq .Spec.Type "presubmit") (eq .Spec.Type "batch")}}pr-logs/pull{{with .Spec.Refs}}/{{if eq .Org "https://gke-internal-review.googlesource.com"}}gke-internal.googlesource.com{{else if eq .Org "https://team-review.googlesource.com"}}team.googlesource.com{{else}}{{.Org}}{{end}}_{{.Repo}}{{end}}{{else}}logs{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  report_template: '[Full PR test history](https://gubernator-internal.googleplex.com/pr/{{if eq .Spec.Refs.Org "kubernetes"}}{{if eq .Spec.Refs.Repo "kubernetes"}}{{else}}{{.Spec.Refs.Repo}}/{{end}}{{else}}{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}/{{end}}{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}). [Your PR dashboard](https://gubernator-internal.googleplex.com/pr/{{with index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}).'
  pod_pending_timeout: 60m
  default_decoration_config:
    timeout: 7200000000000 # 2h
    grace_period: 15000000000 # 15s
    utility_images:
      clonerefs: gcr.io/k8s-prow/clonerefs:v20180916-38d429f98
      initupload: gcr.io/k8s-prow/initupload:v20180916-38d429f98
      entrypoint: gcr.io/k8s-prow/entrypoint:v20180916-38d429f98
      sidecar: gcr.io/k8s-prow/sidecar:v20180916-38d429f98
    gcs_configuration:
      bucket: "gob-prow"
      path_strategy: "explicit"
    gcs_credentials_secret: "service-account"
    cookiefile_secret: http-cookiefile/cookies

sinker:
  resync_period: 1m
  max_prowjob_age: 48h
  max_pod_age: 30m

prowjob_namespace: default
pod_namespace: test-pods
log_level: info
presets:
- labels:
    preset-service-account: "true"
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/service-account/service-account.json
  volumes:
  - name: service
    secret:
      secretName: service-account
  volumeMounts:
  - name: service
    mountPath: /etc/service-account
    readOnly: true
- labels:
    preset-k8s-ssh: "true"
  env:
  - name: USER
    value: prow
  - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
    value: /etc/ssh-key-secret/ssh-private
  - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
    value: /etc/ssh-key-secret/ssh-public
  volumes:
  - name: ssh
    secret:
      defaultMode: 0400
      secretName: ssh-key-secret
  volumeMounts:
  - name: ssh
    mountPath: /etc/ssh-key-secret
    readOnly: true
- labels:
    preset-vpa-alpha: "true"
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/service-account/vpa-eap-service-account.json
  volumes:
  - name: service
    secret:
      secretName: vpa-eap-service-account
  volumeMounts:
  - name: service
    mountPath: /etc/service-account
    readOnly: true
# storage / caching presets
- labels:
    preset-bazel-scratch-dir: "true"
  env:
  - name: TEST_TMPDIR
    value: /bazel-scratch/.cache/bazel
  volumes:
  - name: bazel-scratch
    emptyDir: {}
  volumeMounts:
  - name: bazel-scratch
    mountPath: /bazel-scratch/.cache
- labels:
    preset-bazel-remote-cache-enabled: "true"
  env:
  - name: BAZEL_REMOTE_CACHE_ENABLED
    value: "true"
# docker-in-docker (with images/bootstrap) preset
# NOTE: using this also requires using that image,
# ensuring you run your test under either the ENTRYPOINT or:
# /usr/local/bin/runner my-test-command --foo --bar
# AND setting the following on your PodSpec:
# securityContext:
#   privileged: true
- labels:
    preset-dind-enabled: "true"
  env:
  - name: DOCKER_IN_DOCKER_ENABLED
    value: "true"
  volumes:
  - name: docker-graph
    emptyDir: {}
  volumeMounts:
  - name: docker-graph
    mountPath: /docker-graph

presubmits:
  https://velostrata-internal-review.googlesource.com/fejta-demo:
  - name: presubmit-velostrata-internal-fejta-demo-pass
    decorate: true
    always_run: true
    extra_refs:
    - org: fejta
      repo: test-infra
      base_ref: demo
      path_alias: k8s.io/test-infra
    - org: on-prem
      repo: secret
      base_ref: master
      clone_uri: http://35.230.59.165/git/demo.git
      path_alias: on-prem/secret
    spec:
      containers:
      - image: busybox
        command:
        - ./pass.sh
  - name: presubmit-velostrata-internal-fejta-demo-fail
    decorate: true
    always_run: true
    spec:
      containers:
      - image: busybox
        command:
        - ./fail.sh

  https://gke-internal-review.googlesource.com/test-infra:
  - name: pull-test-infra-presubmit
    decorate: true
    always_run: true
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
        command:
        - ./prow/hack/verify-config.sh
  # TODO: convert to podutils (keep this for demo)
  - name: pull-test-infra-hello-git
    always_run: true
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180913-094478d32-krzyzacy
        args:
        - --clean
        - --repo=gke-internal-review.googlesource.com/test-infra=$(PULL_REFS)
        - --repo=github.com/krzyzacy/hello-github=master
        - --repo=ec2-18-191-106-213.us-east-2.compute.amazonaws.com:/home/git/hello-aws.git
        - --ssh=/aws-ssh-key/.ssh/ssh-private
        - --root=/go/src
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://gob-prow/pr-logs
        - --scenario=execute
        - --
        - find
        - /go/src
        volumeMounts:
        - name: aws-ssh-key
          mountPath: /aws-ssh-key/.ssh
      volumes:
      - name: aws-ssh-key
        secret:
          defaultMode: 0400
          secretName: aws-ssh-key
  https://gke-internal-review.googlesource.com/kubernetes:
  - name: pull-gob-kubernetes-build
    decorate: true
    always_run: true
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    labels:
      preset-dind-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
        command:
        - runner.sh
        - ../../../k8s.io/test-infra/scenarios/kubernetes_build.py
        args:
        - --fast
        - --release=gob-prow
        - --push-build-script=../../../k8s.io/release/push-build.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 3
            memory: "8Gi"
  - name: pull-gob-kubernetes-unit
    always_run: true
    labels:
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
        args:
        - --clean
        - --repo=gke-internal.googlesource.com/kubernetes=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://gob-prow/pr-logs
        - --scenario=kubernetes_bazel
        - -- # end bootstrap args, scenario args below
        - --test=//... -//build/... -//vendor/...
        - --manual-test=//hack:verify-all
        - --test-args=--config=unit
        - --test-args=--build_tag_filters=-e2e,-integration
        - --test-args=--test_tag_filters=-e2e,-integration
        - --test-args=--flaky_test_attempts=3
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: pull-gob-kubernetes-integration
    always_run: true
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
        args:
        - --clean
        - --repo=gke-internal.googlesource.com/kubernetes=$(PULL_REFS)
        - --timeout=100
        - --scenario=kubernetes_verify
        - --upload=gs://gob-prow/pr-logs
        - --
        - --branch=master
        - --force
        - --prow
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 3
  https://gke-internal-review.googlesource.com/kubernetes/gke-common-webhooks:
  - name: pull-webhooks-unit
    always_run: true
    decorate: true
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
        command:
        - "make"
        - "lint"
        - "test"
  https://gke-internal-review.googlesource.com/net/mci:
  - name: pull-mci-unit
    always_run: true
    decorate: true
    labels:
      preset-dind-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
        command:
        - runner.sh
        args:
        - make
        - test
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
  https://team-review.googlesource.com/alphabetcloud/galu:
  - name: pull-galu-presubmit
    always_run: true
    decorate: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
        command:
        - ./prow/presubmit.sh
  https://gke-internal-review.googlesource.com/syllogi/cluster-management:
  - name: pull-syllogi-cluster-api-build
    always_run: true
    decorate: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-1.11
        command:
        - ./cluster-api/scripts/ci-build.sh
  - name: pull-syllogi-cluster-api-make
    always_run: true
    decorate: true
    labels:
      preset-dind-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-1.11
        command:
        - runner.sh
        args:
        - ./cluster-api/scripts/ci-make.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: pull-syllogi-cluster-api-unittest
    always_run: true
    decorate: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
        command:
        - ./cluster-api/scripts/ci-test.sh
  - name: pull-syllogi-cli-build
    always_run: true
    decorate: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-1.11
        command:
        - ./syllogi-cli/scripts/ci-build.sh
  - name: pull-syllogi-cli-make
    always_run: true
    decorate: true
    labels:
      preset-dind-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-1.11
        command:
        - runner.sh
        args:
        - ./syllogi-cli/scripts/ci-make.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: pull-syllogi-cli-unittest
    always_run: true
    decorate: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
        command:
        - ./syllogi-cli/scripts/ci-test.sh
  https://gke-internal-review.googlesource.com/syllogi/logmon:
  - name: pull-syllogi-logmon-gofmt
    always_run: true
    decorate: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-1.11
        command:
        - ./hack/verify-gofmt.sh
  # TODO(senlu): Consider a rewrite of this into the modern prow format.
  https://team-review.googlesource.com/gke-kubernetes-enterprise-control/prototype:
  - name: nomos-presubmit
    always_run: true
    decorate: true
    labels:
      preset-dind-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
        command:
        - runner.sh
        args:
        - make
        - test
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
  https://team-review.googlesource.com/big-compute-eng/batch:
  - name: pull-batch-presubmit
    always_run: true
    decorate: true
    spec:
      containers:
      - image: gcr.io/kubebatchtest/prowcontainers/prowcontainer:final
        imagePullPolicy: Always
        command:
        - ./prow/RunAcceptanceTests.sh
  https://gke-internal-review.googlesource.com/GoogleCloudPlatform/redis-operator:
  # TODO(krzyzacy) : migrate kubetest jobs to podutils
  - name: redis-operator-e2e
    agent: kubernetes
    context: redis-operator-e2e
    always_run: true
    rerun_command: "/test redis-operator-e2e"
    trigger: "(?m)^/test (all|redis-operator-e2e),?(\\s+|$)"
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
      preset-dind-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
        args:
        - --clean
        - --timeout=300
        - --repo=gke-internal-review.googlesource.com/GoogleCloudPlatform/redis-operator=$(PULL_REFS)
        - --root=/go/src
        - --upload=gs://gob-prow/pr-logs
        - --scenario=kubernetes_e2e
        - --
        - --check-leaked-resources
        - --cluster=gke-redis-operator-cluster
        - --deployment=gke
        - --extract=gke-latest
        - --gcp-cloud-sdk=gs://cloud-sdk-testing/ci/staging
        - --gcp-node-image=gci
        - --gcp-zone=us-central1-f
        - --gke-environment=test
        - --gke-shape={"default":{"Nodes":2,"MachineType":"n1-standard-4"}}
        - --gke-additional-zones=us-central1-a,us-central1-b
        - --provider=gke
        - --test=false
        - --test-cmd=../hack/e2e.sh
        - --timeout=1h
        securityContext:
          privileged: true

periodics:
 - cron: '1 17 * * 0' # Run at 10:01PST (17:01 UTC) on sunday
   agent: kubernetes
   name: ci-kubernetes-e2e-gke-scale-correctness
   labels:
     preset-service-account: "true"
     preset-k8s-ssh: "true"
   spec:
     containers:
     - args:
       - --timeout=660
       - --bare
       - --scenario=kubernetes_e2e
       - --upload=gs://gob-prow/logs
       - --
       - --check-leaked-resources
       - --cluster=gke-scale-cluster
       - --deployment=gke
       - --extract=gke-latest
       - --gcp-cloud-sdk=gs://cloud-sdk-testing/ci/staging
       - --gcp-node-image=gci
       - --gcp-project=k8s-scale-testing
       - --gcp-zone=us-east1-a
       - --ginkgo-parallel=30
       - --gke-command-group=beta
       - --gke-create-command=container clusters create --quiet --enable-ip-alias --create-subnetwork name=ip-alias-subnet --cluster-ipv4-cidr=/11 --services-ipv4-cidr=/18
       - --gke-environment=staging
       - --gke-shape={"default":{"Nodes":4999,"MachineType":"g1-small"},"heapster-pool":{"Nodes":1,"MachineType":"n1-standard-16"}}
       - --provider=gke
       - --test_args=--ginkgo.flakeAttempts=2 --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[DisabledForLargeClusters\] --allowed-not-ready-nodes=40 --node-schedulable-timeout=90m --minStartupPods=8
       - --timeout=630m
       image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
       resources:
         requests:
           memory: "6Gi"
 - cron: '1 17 * * 6' # Run at 10:01PST (17:01 UTC) on saturday
   agent: kubernetes
   name: ci-kubernetes-e2e-gke-large-correctness
   labels:
     preset-service-account: "true"
     preset-k8s-ssh: "true"
   spec:
     containers:
     - args:
       - --timeout=480
       - --bare
       - --scenario=kubernetes_e2e
       - --upload=gs://gob-prow/logs
       - --
       - --check-leaked-resources
       - --cluster=gke-scale-cluster
       - --deployment=gke
       - --extract=gke-latest
       - --gcp-cloud-sdk=gs://cloud-sdk-testing/ci/staging
       - --gcp-node-image=gci
       - --gcp-project=k8s-scale-testing
       - --gcp-zone=us-east1-a
       - --ginkgo-parallel=30
       - --gke-command-group=beta
       - --gke-create-command=container clusters create --quiet --enable-ip-alias --create-subnetwork name=ip-alias-subnet --cluster-ipv4-cidr=/12 --services-ipv4-cidr=/19
       - --gke-environment=staging
       - --gke-shape={"default":{"Nodes":2000,"MachineType":"g1-small"},"heapster-pool":{"Nodes":1,"MachineType":"n1-standard-8"}}
       - --provider=gke
       - --test_args=--ginkgo.flakeAttempts=2 --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[DisabledForLargeClusters\] --minStartupPods=8
       - --timeout=450m
       image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
       resources:
         requests:
           memory: "6Gi"

 - cron: '1 3 * * 0' # Run at 20:01PST on saturday (03:01 UTC) on sunday
   agent: kubernetes
   name: ci-kubernetes-e2e-gke-small-correctness-canary
   labels:
     preset-service-account: "true"
     preset-k8s-ssh: "true"
   spec:
     containers:
     - args:
       - --timeout=220
       - --bare
       - --scenario=kubernetes_e2e
       - --upload=gs://gob-prow/logs
       - --
       - --check-leaked-resources
       - --cluster=gke-scale-cluster-canary
       - --deployment=gke
       - --extract=gke-latest
       - --gcp-cloud-sdk=gs://cloud-sdk-testing/ci/staging
       - --gcp-node-image=gci
       - --gcp-project=k8s-scale-testing
       - --gcp-zone=us-east1-a
       - --ginkgo-parallel=30
       - --gke-command-group=beta
       - --gke-create-command=container clusters create --quiet --enable-ip-alias --create-subnetwork name=ip-alias-subnet --cluster-ipv4-cidr=/16 --services-ipv4-cidr=/19
       - --gke-environment=prod
       - --gke-shape={"default":{"Nodes":200,"MachineType":"g1-small"},"heapster-pool":{"Nodes":1,"MachineType":"n1-standard-8"}}
       - --provider=gke
       - --test_args=--ginkgo.flakeAttempts=2 --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[DisabledForLargeClusters\] --minStartupPods=8
       - --timeout=200m
       image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master

 - interval: 1h
   name: ci-kubernetes-bazel-test
   agent: kubernetes
   labels:
     preset-service-account: "true"
     preset-bazel-scratch-dir: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
       args:
       - --clean
       - --job=$(JOB_NAME)
       - --repo=gke-internal.googlesource.com/kubernetes
       - --service-account=/etc/service-account/service-account.json
       - --upload=gs://gob-prow/logs
       - --scenario=kubernetes_bazel
       - -- # end bootstrap args, scenario args below
       - --test=//... -//build/... -//vendor/...
       - --manual-test=//hack:verify-all
       - --test-args=--config=unit
       - --test-args=--build_tag_filters=-e2e,-integration
       - --test-args=--test_tag_filters=-e2e,-integration
       - --test-args=--flaky_test_attempts=3
       securityContext:
         privileged: true
       resources:
         requests:
           memory: "6Gi"
 - interval: 30m
   name: ci-kubernetes-build
   agent: kubernetes
   labels:
     preset-service-account: "true"
     preset-dind-enabled: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
       args:
       - --clean
       - --repo=gke-internal.googlesource.com/kubernetes
       - --repo=k8s.io/release
       - --root=/go/src
       - --timeout=30
       - --scenario=kubernetes_build
       - --upload=gs://gob-prow/logs
       - --
       - --fast
       - --release=gob-prow
       - --push-build-script=../../k8s.io/release/push-build.sh
       # docker-in-docker needs privileged mode
       securityContext:
         privileged: true
       resources:
         requests:
           cpu: 3
           memory: "8Gi"
 - interval: 1h
   name: ci-kubernetes-integration
   agent: kubernetes
   labels:
     preset-service-account: "true"
     preset-dind-enabled: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
       args:
       - --clean
       - --repo=gke-internal.googlesource.com/kubernetes
       - --timeout=100
       - --scenario=kubernetes_verify
       - --upload=gs://gob-prow/logs
       - --
       - --branch=master
       - --force
       - --prow
       # docker-in-docker needs privileged mode
       securityContext:
         privileged: true
       resources:
         requests:
           cpu: 3
 - interval: 1h
   agent: kubernetes
   name: ci-kubernetes-e2e-gob-gke
   labels:
     preset-service-account: "true"
     preset-k8s-ssh: "true"
   spec:
     containers:
     - args:
       - --timeout=70
       - --bare
       - --upload=gs://gob-prow/logs
       - --scenario=kubernetes_e2e
       - --
       - --check-leaked-resources
       - --cluster=
       - --deployment=gke
       - --extract=gke-latest
       - --gcp-cloud-sdk=gs://cloud-sdk-testing/ci/staging
       - --gcp-node-image=gci
       - --gcp-zone=us-central1-f
       - --ginkgo-parallel
       - --gke-environment=staging
       - --provider=gke
       - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
       - --timeout=50m
       image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master

   # gke fast autoscaling agent jobs
 - interval: 30m
   name: ci-fast-autoscaling-agent-image-build
   agent: kubernetes
   labels:
     preset-service-account: "true"
     preset-dind-enabled: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
       args:
       - --clean
       - --repo=gke-internal.googlesource.com/GoogleCloudPlatform/k8s-stackdriver=fast-autoscaling
       - --root=/go/src
       - --timeout=30
       - --scenario=execute
       - --upload=gs://gob-prow/logs
       - -- # stop bootstrap flags
       - --env=TAG=ci_latest
       - --env=REGISTRY=gcr.io/gke-autoscaling-gcr
       - ./hack/release-ci.sh
       # docker-in-docker needs privileged mode
       securityContext:
         privileged: true

 - interval: 2h
   name: ci-fast-autoscaling-agent-e2e
   agent: kubernetes
   labels:
     preset-k8s-ssh: "true"
     preset-service-account: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
       args:
       - --timeout=320
       - --repo=gke-internal.googlesource.com/GoogleCloudPlatform/k8s-stackdriver=fast-autoscaling
       - --root=/go/src
       - --upload=gs://gob-prow/logs
       - --scenario=kubernetes_e2e
       - --
       - --check-leaked-resources
       - --cluster=gke-autoscaling-cluster
       - --deployment=gke
       - --extract=gs://kubernetes-release-gke-internal/ci/latest-autoscaling.txt
       - --gcp-cloud-sdk=gs://cloud-sdk-testing/ci/staging
       - --gcp-node-image=gci
       - --gcp-zone=us-central1-f
       - --ginkgo-parallel=1
       - --gke-environment=test
       - --provider=gke
       - --test=false
       - --test-cmd=../test/fast-autoscaling-agent/run-e2e.sh
       - --test-cmd-args=--ginkgo.focus=\[Feature:FastAutoscalingAgent\]
       - --timeout=5h


   # gke autoscaling jobs
 - interval: 30m
   name: ci-autoscaling-image-build
   agent: kubernetes
   labels:
     preset-service-account: "true"
     preset-dind-enabled: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
       args:
       - --clean
       - --repo=gke-internal.googlesource.com/gke-autoscaling
       - --root=/go/src
       - --timeout=30
       - --scenario=execute
       - --upload=gs://gob-prow/logs
       - -- # stop bootstrap flags
       - --env=TAG=ci_latest
       - --env=REGISTRY=gcr.io/gke-autoscaling-gcr
       - ./hack/release-ci.sh
       # docker-in-docker needs privileged mode
       securityContext:
         privileged: true

 - interval: 2h
   name: ci-autoscaling-ca-e2e
   agent: kubernetes
   labels:
     preset-k8s-ssh: "true"
     preset-service-account: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
       args:
       - --timeout=440
       - --repo=gke-internal.googlesource.com/gke-autoscaling=master
       - --root=/go/src
       - --upload=gs://gob-prow/logs
       - --scenario=kubernetes_e2e
       - --
       - --check-leaked-resources
       - --cluster=gke-autoscaling-cluster
       - --deployment=gke
       - --extract=gs://kubernetes-release-gke-internal/ci/latest-autoscaling.txt
       - --gcp-cloud-sdk=gs://cloud-sdk-testing/ci/staging
       - --gcp-node-image=gci
       - --gcp-zone=us-central1-f
       - --ginkgo-parallel=1
       - --gke-environment=test
       - --provider=gke
       - --test=false
       - --test-cmd=../test/cluster-autoscaler/e2e/hack/run-e2e.sh
       - --test-cmd-args=--ginkgo.focus=\[Feature:ClusterSizeAutoscalingScaleUp\]|\[Feature:ClusterSizeAutoscalingScaleDown\]
       - --timeout=7h

 - interval: 2h
   name: ci-autoscaling-nap-e2e
   agent: kubernetes
   labels:
     preset-k8s-ssh: "true"
     preset-service-account: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
       args:
       - --timeout=320
       - --repo=gke-internal.googlesource.com/gke-autoscaling=master
       - --root=/go/src
       - --upload=gs://gob-prow/logs
       - --scenario=kubernetes_e2e
       - --
       - --check-leaked-resources
       - --cluster=gke-autoscaling-cluster
       - --deployment=gke
       - --extract=gs://kubernetes-release-gke-internal/ci/latest-autoscaling.txt
       - --gcp-cloud-sdk=gs://cloud-sdk-testing/ci/staging
       - --gcp-node-image=gci
       - --gcp-zone=us-central1-f
       - --ginkgo-parallel=1
       - --gke-environment=test
       - --provider=gke
       - --test=false
       - --test-cmd=../test/cluster-autoscaler/e2e/hack/run-e2e.sh
       - --test-cmd-args=--ginkgo.focus=\[Feature:NodeAutoProvisioning\]
       - --timeout=5h

 - interval: 2h
   name: ci-autoscaling-nap-gpu-e2e
   agent: kubernetes
   labels:
     preset-k8s-ssh: "true"
     preset-service-account: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
       args:
       - --timeout=300
       - --repo=gke-internal.googlesource.com/gke-autoscaling=master
       - --root=/go/src
       - --upload=gs://gob-prow/logs
       - --scenario=kubernetes_e2e
       - --
       - --check-leaked-resources
       - --cluster=gke-autoscaling-cluster
       - --deployment=gke
       - --extract=gs://kubernetes-release-gke-internal/ci/latest-autoscaling.txt
       - --gcp-cloud-sdk=gs://cloud-sdk-testing/ci/staging
       - --gcp-node-image=gci
       - --gcp-zone=us-west1-b
       - --gcp-project-type=gpu-project
       - --ginkgo-parallel=1
       - --gke-environment=test
       - --provider=gke
       - --test=false
       - --test-cmd=../test/cluster-autoscaler/e2e/hack/run-e2e.sh
       - --test-cmd-args=--ginkgo.focus=\[Feature:NodeAutoProvisioningWithGPU\]
       - --timeout=2h

 - interval: 2h
   name: ci-autoscaling-vpa-full-e2e
   agent: kubernetes
   labels:
     preset-k8s-ssh: "true"
     preset-vpa-alpha: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
       args:
       - --timeout=80
       - --repo=k8s.io/autoscaler=master
       - --root=/go/src
       - --upload=gs://gob-prow/logs
       - --scenario=kubernetes_e2e
       - --
       - --check-leaked-resources
       - --deployment=gke
       - --extract=gs://kubernetes-release-gke-internal/ci/latest-autoscaling.txt
       - --gcp-cloud-sdk=gs://cloud-sdk-testing/ci/staging
       - --gcp-node-image=gci
       - --gcp-project=prow-gob-vpa
       - --gcp-zone=us-central1-f
       - --ginkgo-parallel=1
       - --gke-command-group=beta
       - --gke-create-command=container clusters create --enable-vertical-pod-autoscaling
       - --gke-environment=test
       - --provider=gke
       - --test=false
       - --test-cmd=../vertical-pod-autoscaler/hack/run-e2e-tests.sh
       - --test-cmd-args=full-vpa
       - --timeout=60m
 - interval: 2h
   name: ci-autoscaling-vpa-recommender-e2e
   agent: kubernetes
   labels:
     preset-k8s-ssh: "true"
     preset-vpa-alpha: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
       args:
       - --timeout=80
       - --repo=k8s.io/autoscaler=master
       - --root=/go/src
       - --upload=gs://gob-prow/logs
       - --scenario=kubernetes_e2e
       - --
       - --check-leaked-resources
       - --deployment=gke
       - --extract=gs://kubernetes-release-gke-internal/ci/latest-autoscaling-vpa-recommender.txt
       - --gcp-cloud-sdk=gs://cloud-sdk-testing/ci/staging
       - --gcp-node-image=gci
       - --gcp-project=prow-gob-vpa
       - --gcp-zone=us-central1-f
       - --ginkgo-parallel=1
       - --gke-command-group=beta
       - --gke-create-command=container clusters create --enable-vertical-pod-autoscaling
       - --gke-environment=test
       - --provider=gke
       - --test=false
       - --test-cmd=../vertical-pod-autoscaler/hack/run-e2e-tests.sh
       - --test-cmd-args=recommender
       - --timeout=60m
 - interval: 2h
   name: ci-autoscaling-vpa-updater-e2e
   agent: kubernetes
   labels:
     preset-k8s-ssh: "true"
     preset-vpa-alpha: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
       args:
       - --timeout=80
       - --repo=k8s.io/autoscaler=master
       - --root=/go/src
       - --upload=gs://gob-prow/logs
       - --scenario=kubernetes_e2e
       - --
       - --check-leaked-resources
       - --deployment=gke
       - --extract=gs://kubernetes-release-gke-internal/ci/latest-autoscaling-vpa-updater.txt
       - --gcp-cloud-sdk=gs://cloud-sdk-testing/ci/staging
       - --gcp-node-image=gci
       - --gcp-project=prow-gob-vpa
       - --gcp-zone=us-central1-f
       - --ginkgo-parallel=1
       - --gke-command-group=beta
       - --gke-create-command=container clusters create --enable-vertical-pod-autoscaling
       - --gke-environment=test
       - --provider=gke
       - --test=false
       - --test-cmd=../vertical-pod-autoscaler/hack/run-e2e-tests.sh
       - --test-cmd-args=updater
       - --timeout=60m
 - interval: 2h
   name: ci-autoscaling-vpa-admission-controller-e2e
   agent: kubernetes
   labels:
     preset-k8s-ssh: "true"
     preset-vpa-alpha: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
       args:
       - --timeout=80
       - --repo=k8s.io/autoscaler=master
       - --root=/go/src
       - --upload=gs://gob-prow/logs
       - --scenario=kubernetes_e2e
       - --
       - --check-leaked-resources
       - --deployment=gke
       - --extract=gs://kubernetes-release-gke-internal/ci/latest-autoscaling-vpa-admission-controller.txt
       - --gcp-cloud-sdk=gs://cloud-sdk-testing/ci/staging
       - --gcp-node-image=gci
       - --gcp-project=prow-gob-vpa
       - --gcp-zone=us-central1-f
       - --ginkgo-parallel=1
       - --gke-command-group=beta
       - --gke-create-command=container clusters create --enable-vertical-pod-autoscaling
       - --gke-environment=test
       - --provider=gke
       - --test=false
       - --test-cmd=../vertical-pod-autoscaler/hack/run-e2e-tests.sh
       - --test-cmd-args=admission-controller
       - --timeout=60m
 - interval: 2h
   name: ci-autoscaling-vpa-actuation-e2e
   agent: kubernetes
   labels:
     preset-k8s-ssh: "true"
     preset-vpa-alpha: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
       args:
       - --timeout=80
       - --repo=k8s.io/autoscaler=master
       - --root=/go/src
       - --upload=gs://gob-prow/logs
       - --scenario=kubernetes_e2e
       - --
       - --check-leaked-resources
       - --deployment=gke
       - --extract=gs://kubernetes-release-gke-internal/ci/latest-autoscaling-vpa-actuation.txt
       - --gcp-cloud-sdk=gs://cloud-sdk-testing/ci/staging
       - --gcp-node-image=gci
       - --gcp-project=prow-gob-vpa
       - --gcp-zone=us-central1-f
       - --ginkgo-parallel=1
       - --gke-command-group=beta
       - --gke-create-command=container clusters create --enable-vertical-pod-autoscaling
       - --gke-environment=test
       - --provider=gke
       - --test=false
       - --test-cmd=../vertical-pod-autoscaler/hack/run-e2e-tests.sh
       - --test-cmd-args=actuation
       - --timeout=60m

 # Production continuous prober for go/nomos.  See go/nomos-production.
 # Using prime numbers as intervals so that runs would spread out.
 - interval: 13m
   name: nomos-prober
   agent: kubernetes
   decorate: true
   labels:
     preset-dind-enabled: "true"
   spec:
     activeDeadlineSeconds: 7200  # 2 hours, there are long running tests.
     containers:
     - image: gcr.io/stolos-dev/e2e-prober:test-e2e-latest
       imagePullPolicy: Always
       command:
       - /opt/testing/e2e/setup.sh
       args:
       # '--flag=value' syntax doesn't work here. Flag parameters are quoted.
       - --gcp-prober-cred
       - "/etc/prober-gcp-service-account/prober_runner_client_key.json"
       - --gcp-runner-cred
       - "gs://stolos-dev/e2e/nomos-e2e.joonix.net/test_runner_client_key.json"
       - --gcp-watcher-cred
       - "gs://stolos-dev/e2e/nomos-e2e.joonix.net/watcher_client_key.json"
       - --importer
       - "gcp"
       - --skip-installation
       - --tap
       - --test
       securityContext:
         privileged: true
       volumeMounts:
       - name: prober-cred
         mountPath: /etc/prober-gcp-service-account
         readOnly: true
     volumes:
     - name: prober-cred
       secret:
         secretName: nomos-prober-runner-gcp-client-key

 # Continuous integration runs all nomos tests based off of contents of the
 # "master" branch, reinstalling the contents of the cluster in the process.
 - interval: 19m
   name: nomos-ci
   agent: kubernetes
   labels:
     preset-service-account: "true"
     preset-dind-enabled: "true"
   spec:
     activeDeadlineSeconds: 7200 # 2 hours. these tests take a long time.
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
       args:
       - --clean
       - --timeout=300
       - --repo=team.googlesource.com/gke-kubernetes-enterprise-control/prototype=master
       - --scenario=execute
       - --upload=gs://gob-prow/logs
       - --
       - make
       - ci-test-e2e
       env:
       # The ambient UNIX user name as would be defined inside a shell.
       - name: USER
         value: "nomos-ci"
       # The ambient UNIX numeric user id as would be defined inside a shell.
       - name: UID
         value: "10333"
       # The ambient UNIX numeric group id as would be defined inside a shell.
       - name: GID
         value: "10333"
       # docker-in-docker needs privileged mode
       securityContext:
         privileged: true
       volumeMounts:
       - name: prober-cred
         mountPath: /etc/prober-gcp-service-account
         readOnly: true
     volumes:
     - name: prober-cred
       secret:
         secretName: nomos-prober-runner-gcp-client-key

# Runs a release process that builds go/nomos releases based off of latest HEAD
# that passes the build.
 - interval: 24h
   name: nomos-release
   agent: kubernetes
   labels:
     preset-service-account: "true"
     preset-dind-enabled: "true"
   spec:
     activeDeadlineSeconds: 7200  # 2 hours
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
       args:
       - --clean
       - --timeout=300
       - --repo=team.googlesource.com/gke-kubernetes-enterprise-control/prototype=master
       - --scenario=execute
       - --upload=gs://gob-prow/logs
       - --
       - make
       - --
       - --makefile=Makefile.release
       - autorelease
       env:
       # The ambient UNIX user name as would be defined inside a shell.
       - name: USER
         value: "nomos-release"
       # The ambient UNIX numeric user id as would be defined inside a shell.
       - name: UID
         value: "10333"
       # The ambient UNIX numeric group id as would be defined inside a shell.
       - name: GID
         value: "10333"
       # docker-in-docker needs privileged mode
       securityContext:
         privileged: true
       volumeMounts:
       - name: prober-cred
         mountPath: /etc/prober-gcp-service-account
         readOnly: true
     volumes:
     - name: prober-cred
       secret:
         secretName: nomos-prober-runner-gcp-client-key

# Tests go/nomos against GKE 1.10.x.
# See "nomos-ci" job above for all relevant comments.  The jobs should be by
# and large the same.
 - interval: 23m
   name: nomos-ci-gke-110
   agent: kubernetes
   labels:
     preset-service-account: "true"
     preset-dind-enabled: "true"
   spec:
     activeDeadlineSeconds: 7200 # 2 hours. these tests take a long time.
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
       args:
       - --clean
       - --timeout=300
       - --repo=team.googlesource.com/gke-kubernetes-enterprise-control/prototype=master
       - --scenario=execute
       - --upload=gs://gob-prow/logs
       - --
       - make
       - ci-test-e2e
       env:
       # The ambient UNIX user name as would be defined inside a shell.
       - name: USER
         value: "nomos-ci-gke-110"
       # The ambient UNIX numeric user id as would be defined inside a shell.
       - name: UID
         value: "10333"
       # The ambient UNIX numeric group id as would be defined inside a shell.
       - name: GID
         value: "10333"
       # docker-in-docker needs privileged mode
       securityContext:
         privileged: true
       volumeMounts:
       - name: prober-cred
         mountPath: /etc/prober-gcp-service-account
         readOnly: true
     volumes:
     - name: prober-cred
       secret:
         secretName: nomos-prober-runner-gcp-client-key

# Tests go/nomos against an alpha GKE 1.9.7 cluster.
# See "nomos-ci" job above for all relevant comments.  The jobs should be by
# and large the same.
 - interval: 23m
   name: nomos-ci-gke-197-a
   agent: kubernetes
   labels:
     preset-service-account: "true"
     preset-dind-enabled: "true"
   spec:
     activeDeadlineSeconds: 7200
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
       args:
       - --clean
       - --timeout=300
       - --repo=team.googlesource.com/gke-kubernetes-enterprise-control/prototype=master
       - --scenario=execute
       - --upload=gs://gob-prow/logs
       - --
       - make
       - ci-test-e2e
       env:
       - name: USER
         value: "nomos-ci-gke-197-a"
       - name: UID
         value: "10333"
       - name: GID
         value: "10333"
       securityContext:
         privileged: true
       volumeMounts:
       - name: prober-cred
         mountPath: /etc/prober-gcp-service-account
         readOnly: true
     volumes:
     - name: prober-cred
       secret:
         secretName: nomos-prober-runner-gcp-client-key

# Tests go/nomos against an alpha GKE 1.10.x cluster.
# See "nomos-ci" job above for all relevant comments.  The jobs should be by
# and large the same.
 - interval: 23m
   name: nomos-ci-gke-110-a
   agent: kubernetes
   labels:
     preset-service-account: "true"
     preset-dind-enabled: "true"
   spec:
     activeDeadlineSeconds: 7200
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
       args:
       - --clean
       - --timeout=300
       - --repo=team.googlesource.com/gke-kubernetes-enterprise-control/prototype=master
       - --scenario=execute
       - --upload=gs://gob-prow/logs
       - --
       - make
       - ci-test-e2e
       env:
       - name: USER
         value: "nomos-ci-gke-110-a"
       - name: UID
         value: "10333"
       - name: GID
         value: "10333"
       securityContext:
         privileged: true
       volumeMounts:
       - name: prober-cred
         mountPath: /etc/prober-gcp-service-account
         readOnly: true
     volumes:
     - name: prober-cred
       secret:
         secretName: nomos-prober-runner-gcp-client-key

 - interval: 30m
   name: periodic_fast_autoscaling_test_prod_us-central1-a
   agent: kubernetes
   labels:
     preset-k8s-ssh: "true"
     preset-service-account: "true"
   spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
      args:
      - --clean
      - --repo=gke-internal.googlesource.com/gke-autoscaling
      - --timeout=20
      - --scenario=execute
      - --upload=gs://gob-prow/logs
      - -- # end bootstrap args, scenario args below
      - /workspace/gke-internal.googlesource.com/gke-autoscaling/test/fast-scaling-tests/test_prod_us-central1-a.sh
 - interval: 30m
   name: periodic_fast_autoscaling_test_experimental_us-east2-a
   agent: kubernetes
   labels:
     preset-k8s-ssh: "true"
     preset-service-account: "true"
   spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
      args:
      - --clean
      - --repo=gke-internal.googlesource.com/gke-autoscaling
      - --timeout=20
      - --scenario=execute
      - --upload=gs://gob-prow/logs
      - -- # end bootstrap args, scenario args below
      - /workspace/gke-internal.googlesource.com/gke-autoscaling/test/fast-scaling-tests/test_experimental_us-east2-a.sh
 - interval: 30m
   name: periodic_fast_autoscaling_test_experimental_ssd_us-east2-a
   agent: kubernetes
   labels:
     preset-k8s-ssh: "true"
     preset-service-account: "true"
   spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
      args:
      - --clean
      - --repo=gke-internal.googlesource.com/gke-autoscaling
      - --timeout=20
      - --scenario=execute
      - --upload=gs://gob-prow/logs
      - -- # end bootstrap args, scenario args below
      - /workspace/gke-internal.googlesource.com/gke-autoscaling/test/fast-scaling-tests/test_experimental_ssd_us-east2-a.sh
 - interval: 30m
   name: periodic_fast_autoscaling_generate_metrics_file
   agent: kubernetes
   labels:
     preset-k8s-ssh: "true"
     preset-service-account: "true"
   spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
      args:
      - --clean
      - --repo=gke-internal.googlesource.com/gke-autoscaling
      - --timeout=20
      - --scenario=execute
      - --upload=gs://gob-prow/logs
      - -- # end bootstrap args, scenario args below
      - /workspace/gke-internal.googlesource.com/gke-autoscaling/test/fast-scaling-tests/generate_metrics_file.sh
   # managed certs in gke jobs
 - interval: 30m
   name: ci-managed-certs-gke-image-build
   agent: kubernetes
   labels:
     preset-service-account: "true"
     preset-dind-enabled: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
       args:
       - --clean
       - --repo=gke-internal.googlesource.com/managed-certs-gke
       - --root=/go/src
       - --timeout=30
       - --scenario=execute
       - --upload=gs://gob-prow/logs
       - -- # stop bootstrap flags
       - --env=TAG=ci_latest
       - make
       - --
       - release-ci
       # docker-in-docker needs privileged mode
       securityContext:
         privileged: true

 - interval: 30m
   name: ci-managed-certs-gke-e2e
   agent: kubernetes
   labels:
     preset-service-account: "true"
     preset-k8s-ssh: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
       args:
       - --clean
       - --repo=gke-internal.googlesource.com/managed-certs-gke
       - --root=/go/src
       - --timeout=65
       - --scenario=kubernetes_e2e
       - --upload=gs://gob-prow/logs
       - -- # stop bootstrap flags
       - --check-leaked-resources
       - --cluster=
       - --deployment=gke
       - --extract=gs://kubernetes-release-gke-internal/ci/latest-managed-certs-gke.txt
       - --gcp-cloud-sdk=gs://cloud-sdk-testing/ci/staging
       - --gcp-node-image=gci
       - --gcp-zone=us-central1-f
       - --gcp-project=managed-certs-gke
       - --gke-create-command=container clusters create --quiet --scopes=compute-rw
       - --gke-environment=test
       - --provider=gke
       - --test=false
       - --test-cmd=../hack/e2e.sh
       - --timeout=45m

 - interval: 1h
   name: periodic-syllogi-cluster-api-build
   agent: kubernetes
   labels:
     preset-service-account: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-1.11
       args:
       - --clean
       - --repo=gke-internal.googlesource.com/syllogi/cluster-management
       - --root=/go/src
       - --upload=gs://syllogi-gob-prow/logs
       - --scenario=execute
       - --
       - /go/src/gke-internal.googlesource.com/syllogi/cluster-management/cluster-api/scripts/ci-build.sh

 - interval: 1h
   name: periodic-syllogi-cluster-api-unittest
   agent: kubernetes
   labels:
     preset-service-account: "true"
     preset-k8s-ssh: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
       args:
       - --clean
       - --repo=gke-internal.googlesource.com/syllogi/cluster-management
       - --root=/go/src
       - --upload=gs://syllogi-gob-prow/logs
       - --scenario=execute
       - --
       - /go/src/gke-internal.googlesource.com/syllogi/cluster-management/cluster-api/scripts/ci-test.sh

 - interval: 1h
   name: periodic-syllogi-cli-build
   agent: kubernetes
   labels:
     preset-service-account: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-1.11
       args:
       - --clean
       - --repo=gke-internal.googlesource.com/syllogi/cluster-management
       - --root=/go/src
       - --upload=gs://syllogi-gob-prow/logs
       - --scenario=execute
       - --
       - /go/src/gke-internal.googlesource.com/syllogi/cluster-management/syllogi-cli/scripts/ci-build.sh

 - interval: 1h
   name: periodic-syllogi-cli-unittest
   agent: kubernetes
   labels:
     preset-service-account: "true"
     preset-k8s-ssh: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-master
       args:
       - --clean
       - --repo=gke-internal.googlesource.com/syllogi/cluster-management
       - --root=/go/src
       - --upload=gs://syllogi-gob-prow/logs
       - --scenario=execute
       - --
       - /go/src/gke-internal.googlesource.com/syllogi/cluster-management/syllogi-cli/scripts/ci-test.sh

 - interval: 1h
   name: ci-bigcomputeeng-batch-acceptance-tests
   agent: kubernetes
   labels:
     preset-service-account: "true"
     preset-k8s-ssh: "true"
   spec:
     containers:
     - image: gcr.io/kubebatchtest/prowcontainers/prowcontainer:final
       imagePullPolicy: Always
       args:
       - --clean
       - --repo=team.googlesource.com/big-compute-eng/batch
       - --upload=gs://gob-prow/logs
       - --scenario=execute
       - --
       - /workspace/team.googlesource.com/big-compute-eng/batch/prow/RunAcceptanceTests.sh
