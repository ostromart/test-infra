plank:
  job_url_template: 'https://gubernator-internal.googleplex.com/build/{{if eq .Spec.Refs.Repo "syllogi/cluster-management"}}syllogi-gob-prow{{else}}gob-prow{{end}}/{{if or (eq .Spec.Type "presubmit") (eq .Spec.Type "batch")}}pr-logs/pull{{with .Spec.Refs}}/{{if eq .Org "https://gke-internal-review.googlesource.com"}}gke-internal.googlesource.com{{else if eq .Org "https://team-review.googlesource.com"}}team.googlesource.com{{else}}{{.Org}}{{end}}_{{.Repo}}{{end}}{{else}}logs{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  report_template: '[Full PR test history](https://gubernator-internal.googleplex.com/pr/{{if eq .Spec.Refs.Org "kubernetes"}}{{if eq .Spec.Refs.Repo "kubernetes"}}{{else}}{{.Spec.Refs.Repo}}/{{end}}{{else}}{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}/{{end}}{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}). [Your PR dashboard](https://gubernator-internal.googleplex.com/pr/{{with index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}).'
  pod_pending_timeout: 60m
prowjob_namespace: default
pod_namespace: test-pods
log_level: info
presets:
- labels:
    preset-service-account: "true"
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/service-account/service-account.json
  volumes:
  - name: service
    secret:
      secretName: service-account
  volumeMounts:
  - name: service
    mountPath: /etc/service-account
    readOnly: true
- labels:
    preset-k8s-ssh: "true"
  env:
  - name: USER
    value: prow
  - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
    value: /etc/ssh-key-secret/ssh-private
  - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
    value: /etc/ssh-key-secret/ssh-public
  volumes:
  - name: ssh
    secret:
      defaultMode: 0400
      secretName: ssh-key-secret
  volumeMounts:
  - name: ssh
    mountPath: /etc/ssh-key-secret
    readOnly: true
# storage / caching presets
- labels:
    preset-bazel-scratch-dir: "true"
  env:
  - name: TEST_TMPDIR
    value: /bazel-scratch/.cache/bazel
  volumes:
  - name: bazel-scratch
    emptyDir: {}
  volumeMounts:
  - name: bazel-scratch
    mountPath: /bazel-scratch/.cache
- labels:
    preset-bazel-remote-cache-enabled: "true"
  env:
  - name: BAZEL_REMOTE_CACHE_ENABLED
    value: "true"

presubmits:
  https://gke-internal-review.googlesource.com/test-infra:
  - name: pull-test-infra-presubmit
    agent: kubernetes
    context: pull-test-infra-presubmit
    always_run: true
    rerun_command: "/test pull-test-infra-presubmit"
    trigger: "(?m)^/test (all|pull-test-infra-presubmit),?(\\s+|$)"
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180511-51cf02e75-master
        args:
        - --clean
        - --repo=gke-internal.googlesource.com/test-infra=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://gob-prow/pr-logs
        - --scenario=execute
        - -- # end bootstrap args, scenario args below
        - /workspace/gke-internal.googlesource.com/test-infra/prow/hack/verify-config.sh
  https://gke-internal-review.googlesource.com/kubernetes:
  - name: pull-gob-kubernetes-build
    agent: kubernetes
    context: pull-gob-kubernetes-build
    always_run: true
    rerun_command: "/test pull-gob-kubernetes-build"
    trigger: "(?m)^/test (all|pull-gob-kubernetes-build),?(\\s+|$)"
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
        args:
        - --clean
        - --repo=gke-internal.googlesource.com/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --root=/go/src
        - --timeout=30
        - --scenario=kubernetes_build
        - --upload=gs://gob-prow/pr-logs
        - --
        - --fast
        - --release=gob-prow
        - --push-build-script=../../k8s.io/release/push-build.sh
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 3
            memory: "8Gi"
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
      volumes:
      - name: docker-graph
        emptyDir: {}
  - name: pull-gob-kubernetes-unit
    agent: kubernetes
    context: pull-gob-kubernetes-unit
    always_run: true
    rerun_command: "/test pull-gob-kubernetes-unit"
    trigger: "(?m)^/test (all|pull-gob-kubernetes-unit),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180511-51cf02e75-master
        args:
        - --clean
        - --repo=gke-internal.googlesource.com/kubernetes=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://gob-prow/pr-logs
        - --scenario=kubernetes_bazel
        - -- # end bootstrap args, scenario args below
        - --test=//... -//build/... -//vendor/...
        - --manual-test=//hack:verify-all
        - --test-args=--config=unit
        - --test-args=--build_tag_filters=-e2e,-integration
        - --test-args=--test_tag_filters=-e2e,-integration
        - --test-args=--flaky_test_attempts=3
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: pull-gob-kubernetes-integration
    agent: kubernetes
    context: pull-gob-kubernetes-integration
    always_run: true
    rerun_command: "/test pull-gob-kubernetes-integration"
    trigger: "(?m)^/test (all|pull-gob-kubernetes-integration),?(\\s+|$)"
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
        args:
        - --clean
        - --repo=gke-internal.googlesource.com/kubernetes=$(PULL_REFS)
        - --timeout=100
        - --scenario=kubernetes_verify
        - --upload=gs://gob-prow/pr-logs
        - --
        - --branch=master
        - --force
        - --prow
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 3
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
      volumes:
      - name: docker-graph
        emptyDir: {}
  https://gke-internal-review.googlesource.com/net/mci:
  - name: pull-mci-unit
    agent: kubernetes
    context: pull-mci-unit
    always_run: true
    rerun_command: "/test pull-mci-unit"
    trigger: "(?m)^/test (all|pull-mci-unit),?(\\s+|$)"
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180511-51cf02e75-master
        args:
        - --clean
        - --repo=gke-internal.googlesource.com/net/mci=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://gob-prow/pr-logs
        - --scenario=execute
        - -- # end bootstrap args, scenario args below
        - "make"
        - "test"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
      volumes:
      - name: docker-graph
        emptyDir: {}
  https://team-review.googlesource.com/alphabetcloud/galu:
  - name: pull-galu-presubmit
    agent: kubernetes
    context: pull-galu-presubmit
    always_run: true
    rerun_command: "/test pull-galu-presubmit"
    trigger: "(?m)^/test (all|pull-galu-presubmit),?(\\s+|$)"
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180511-51cf02e75-master
        args:
        - --clean
        - --repo=team.googlesource.com/alphabetcloud/galu=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://gob-prow/pr-logs
        - --scenario=execute
        - -- # end bootstrap args, scenario args below
        - /workspace/team.googlesource.com/alphabetcloud/galu/prow/presubmit.sh
  https://gke-internal-review.googlesource.com/syllogi/cluster-management:
  - name: pull-syllogi-cluster-api-build
    agent: kubernetes
    context: pull-syllogi-cluster-api-build
    always_run: true
    rerun_command: "/test pull-syllogi-cluster-api-build"
    trigger: "(?m)^/test (all|pull-syllogi-cluster-api-build),?(\\s+|$)"
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - --clean
        - --repo=gke-internal.googlesource.com/syllogi/cluster-management=$(PULL_REFS)
        - --root=/go/src
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://syllogi-gob-prow/pr-logs
        - --scenario=execute
        - -- # end bootstrap args, scenario args below
        - /go/src/gke-internal.googlesource.com/syllogi/cluster-management/cluster-api/scripts/ci-build.sh
  - name: pull-syllogi-cluster-api-make
    agent: kubernetes
    context: pull-syllogi-cluster-api-make
    always_run: true
    rerun_command: "/test pull-syllogi-cluster-api-make"
    trigger: "(?m)^/test (all|pull-syllogi-cluster-api-make),?(\\s+|$)"
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - --clean
        - --repo=gke-internal.googlesource.com/syllogi/cluster-management=$(PULL_REFS)
        - --root=/go/src
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://syllogi-gob-prow/pr-logs
        - --timeout=90
        - --scenario=execute
        - -- # end bootstrap args, scenario args below
        - /go/src/gke-internal.googlesource.com/syllogi/cluster-management/cluster-api/scripts/ci-make.sh
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180730-8b7ab3104-1.11
        resources:
          requests:
            memory: "6Gi"
  - name: pull-syllogi-cluster-api-unittest
    agent: kubernetes
    context: pull-syllogi-cluster-api-unittest
    always_run: true
    rerun_command: "/test pull-syllogi-cluster-api-unittest"
    trigger: "(?m)^/test (all|pull-syllogi-cluster-api-unittest),?(\\s+|$)"
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180511-51cf02e75-master
        args:
        - --clean
        - --repo=gke-internal.googlesource.com/syllogi/cluster-management=$(PULL_REFS)
        - --root=/go/src
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://syllogi-gob-prow/pr-logs
        - --scenario=execute
        - -- # end bootstrap args, scenario args below
        - /go/src/gke-internal.googlesource.com/syllogi/cluster-management/cluster-api/scripts/ci-test.sh
  # TODO(senlu): Consider a rewrite of this into the modern prow format.
  https://team-review.googlesource.com/gke-kubernetes-enterprise-control/prototype:
  - name: nomos-presubmit
    context: nomos-presubmit
    always_run: true
    rerun_command: "/test nomos-presubmit"
    agent: kubernetes
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180511-51cf02e75-master
        args:
        - --clean
        - --timeout=300
        - --repo=team-review.googlesource.com/gke-kubernetes-enterprise-control/prototype=$(PULL_REFS)
        - --scenario=execute
        - --upload=gs://gob-prow/pr-logs
        - --
        - make
        - test
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
      volumes:
      - name: docker-graph
        emptyDir: {}

periodics:
 - cron: '1 17 * * 0' # Run at 10:01PST (17:01 UTC) on sunday
   agent: kubernetes
   name: ci-kubernetes-e2e-gke-scale-correctness
   labels:
     preset-service-account: "true"
     preset-k8s-ssh: "true"
   spec:
     containers:
     - args:
       - --timeout=660
       - --bare
       - --scenario=kubernetes_e2e
       - --upload=gs://gob-prow/logs
       - --
       - --check-leaked-resources
       - --cluster=gke-scale-cluster
       - --deployment=gke
       - --extract=gke-latest
       - --gcp-cloud-sdk=gs://cloud-sdk-testing/ci/staging
       - --gcp-node-image=gci
       - --gcp-project=k8s-scale-testing
       - --gcp-zone=us-east1-a
       - --ginkgo-parallel=30
       - --gke-command-group=beta
       - --gke-create-command=container clusters create --quiet --enable-ip-alias --create-subnetwork name=ip-alias-subnet --cluster-ipv4-cidr=/11 --services-ipv4-cidr=/18
       - --gke-environment=staging
       - --gke-shape={"default":{"Nodes":4999,"MachineType":"g1-small"},"heapster-pool":{"Nodes":1,"MachineType":"n1-standard-16"}}
       - --provider=gke
       - --test_args=--ginkgo.flakeAttempts=2 --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[DisabledForLargeClusters\] --allowed-not-ready-nodes=40 --node-schedulable-timeout=90m --minStartupPods=8
       - --timeout=630m
       image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master
       resources:
         requests:
           memory: "6Gi"
 - cron: '1 17 * * 6' # Run at 10:01PST (17:01 UTC) on saturday
   agent: kubernetes
   name: ci-kubernetes-e2e-gke-large-correctness
   labels:
     preset-service-account: "true"
     preset-k8s-ssh: "true"
   spec:
     containers:
     - args:
       - --timeout=480
       - --bare
       - --scenario=kubernetes_e2e
       - --upload=gs://gob-prow/logs
       - --
       - --check-leaked-resources
       - --cluster=gke-scale-cluster
       - --deployment=gke
       - --extract=gke-latest
       - --gcp-cloud-sdk=gs://cloud-sdk-testing/ci/staging
       - --gcp-node-image=gci
       - --gcp-project=k8s-scale-testing
       - --gcp-zone=us-east1-a
       - --ginkgo-parallel=30
       - --gke-command-group=beta
       - --gke-create-command=container clusters create --quiet --enable-ip-alias --create-subnetwork name=ip-alias-subnet --cluster-ipv4-cidr=/12 --services-ipv4-cidr=/19
       - --gke-environment=staging
       - --gke-shape={"default":{"Nodes":2000,"MachineType":"g1-small"},"heapster-pool":{"Nodes":1,"MachineType":"n1-standard-8"}}
       - --provider=gke
       - --test_args=--ginkgo.flakeAttempts=2 --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[DisabledForLargeClusters\]
       - --timeout=450m
       image: gcr.io/k8s-testimages/kubekins-e2e:v20180402-7b54c4ba6-master
       resources:
         requests:
           memory: "6Gi"
 - interval: 1h
   name: ci-kubernetes-bazel-test
   agent: kubernetes
   labels:
     preset-service-account: "true"
     preset-bazel-scratch-dir: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180511-51cf02e75-master
       args:
       - --clean
       - --job=$(JOB_NAME)
       - --repo=gke-internal.googlesource.com/kubernetes
       - --service-account=/etc/service-account/service-account.json
       - --upload=gs://gob-prow/logs
       - --scenario=kubernetes_bazel
       - -- # end bootstrap args, scenario args below
       - --test=//... -//build/... -//vendor/...
       - --manual-test=//hack:verify-all
       - --test-args=--config=unit
       - --test-args=--build_tag_filters=-e2e,-integration
       - --test-args=--test_tag_filters=-e2e,-integration
       - --test-args=--flaky_test_attempts=3
       securityContext:
         privileged: true
       resources:
         requests:
           memory: "6Gi"
 - interval: 30m
   name: ci-kubernetes-build
   agent: kubernetes
   labels:
     preset-service-account: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
       args:
       - --clean
       - --repo=gke-internal.googlesource.com/kubernetes
       - --repo=k8s.io/release
       - --root=/go/src
       - --timeout=30
       - --scenario=kubernetes_build
       - --upload=gs://gob-prow/logs
       - --
       - --fast
       - --release=gob-prow
       - --push-build-script=../../k8s.io/release/push-build.sh
       env:
       - name: DOCKER_IN_DOCKER_ENABLED
         value: "true"
       # docker-in-docker needs privileged mode
       securityContext:
         privileged: true
       resources:
         requests:
           cpu: 3
           memory: "8Gi"
       volumeMounts:
       - name: docker-graph
         mountPath: /docker-graph
     volumes:
     - name: docker-graph
       emptyDir: {}
 - interval: 1h
   name: ci-kubernetes-integration
   agent: kubernetes
   labels:
     preset-service-account: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
       args:
       - --clean
       - --repo=gke-internal.googlesource.com/kubernetes
       - --timeout=100
       - --scenario=kubernetes_verify
       - --upload=gs://gob-prow/logs
       - --
       - --branch=master
       - --force
       - --prow
       env:
       - name: DOCKER_IN_DOCKER_ENABLED
         value: "true"
       # docker-in-docker needs privileged mode
       securityContext:
         privileged: true
       resources:
         requests:
           cpu: 3
       volumeMounts:
       - name: docker-graph
         mountPath: /docker-graph
     volumes:
     - name: docker-graph
       emptyDir: {}
 - interval: 1h
   agent: kubernetes
   name: ci-kubernetes-e2e-gob-gke
   labels:
     preset-service-account: "true"
     preset-k8s-ssh: "true"
   spec:
     containers:
     - args:
       - --timeout=70
       - --bare
       - --upload=gs://gob-prow/logs
       - --scenario=kubernetes_e2e
       - --
       - --check-leaked-resources
       - --cluster=
       - --deployment=gke
       - --extract=gke-latest
       - --gcp-cloud-sdk=gs://cloud-sdk-testing/ci/staging
       - --gcp-node-image=gci
       - --gcp-zone=us-central1-f
       - --ginkgo-parallel
       - --gke-environment=test
       - --provider=gke
       - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
       - --timeout=50m
       image: gcr.io/k8s-testimages/kubekins-e2e:v20180511-51cf02e75-master

   # gke autoscaling jobs
 - interval: 30m
   name: ci-autoscaling-image-build
   agent: kubernetes
   labels:
     preset-service-account: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180511-51cf02e75-master
       args:
       - --clean
       - --repo=gke-internal.googlesource.com/gke-autoscaling
       - --root=/go/src
       - --timeout=30
       - --scenario=execute
       - --upload=gs://gob-prow/logs
       - -- # stop bootstrap flags
       - --env=TAG=ci_latest
       - --env=REGISTRY=gcr.io/gke-autoscaling-gcr
       - make
       - --
       - -C
       - cluster-autoscaler
       - release-ci
       env:
       - name: DOCKER_IN_DOCKER_ENABLED
         value: "true"
       # docker-in-docker needs privileged mode
       securityContext:
         privileged: true
       volumeMounts:
       - name: docker-graph
         mountPath: /docker-graph
     volumes:
     - name: docker-graph
       emptyDir: {}

 - interval: 6h
   name: ci-autoscaling-e2e-tests
   agent: kubernetes
   labels:
     preset-k8s-ssh: "true"
     preset-service-account: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180511-51cf02e75-master
       args:
       - --timeout=600
       - --bare
       - --upload=gs://gob-prow/logs
       - --scenario=kubernetes_e2e
       - --
       - --check-leaked-resources
       - --cluster=gke-autoscaling-cluster
       - --deployment=gke
       - --extract=gs://kubernetes-release-gke-internal/ci/latest-autoscaling.txt
       - --gcp-cloud-sdk=gs://cloud-sdk-testing/ci/staging
       - --gcp-node-image=gci
       - --gcp-zone=us-central1-f
       - --ginkgo-parallel=1
       - --gke-environment=test
       - --provider=gke
       - --test_args=--ginkgo.focus=\[Feature:ClusterSizeAutoscalingScaleUp\]|\[Feature:ClusterSizeAutoscalingScaleDown\]|\[Feature:ClusterSizeAutoscalingScaleWithNAP\] --ginkgo.skip=\[Flaky\] --minStartupPods=8
       - --timeout=10h
 - interval: 30m
   name: periodic_fast_autoscaling_test_prod_us-central1-a
   agent: kubernetes
   labels:
     preset-k8s-ssh: "true"
     preset-service-account: "true"
   spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180511-51cf02e75-master
      args:
      - --clean
      - --repo=gke-internal.googlesource.com/gke-autoscaling
      - --timeout=20
      - --scenario=execute
      - --upload=gs://gob-prow/logs
      - -- # end bootstrap args, scenario args below
      - /workspace/gke-internal.googlesource.com/gke-autoscaling/test/fast-scaling-tests/test_prod_us-central1-a.sh
 - interval: 30m
   name: periodic_fast_autoscaling_test_experimental_us-east2-a
   agent: kubernetes
   labels:
     preset-k8s-ssh: "true"
     preset-service-account: "true"
   spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180511-51cf02e75-master
      args:
      - --clean
      - --repo=gke-internal.googlesource.com/gke-autoscaling
      - --timeout=20
      - --scenario=execute
      - --upload=gs://gob-prow/logs
      - -- # end bootstrap args, scenario args below
      - /workspace/gke-internal.googlesource.com/gke-autoscaling/test/fast-scaling-tests/test_experimental_us-east2-a.sh
 - interval: 30m
   name: periodic_fast_autoscaling_test_experimental_ssd_us-east2-a
   agent: kubernetes
   labels:
     preset-k8s-ssh: "true"
     preset-service-account: "true"
   spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180511-51cf02e75-master
      args:
      - --clean
      - --repo=gke-internal.googlesource.com/gke-autoscaling
      - --timeout=20
      - --scenario=execute
      - --upload=gs://gob-prow/logs
      - -- # end bootstrap args, scenario args below
      - /workspace/gke-internal.googlesource.com/gke-autoscaling/test/fast-scaling-tests/test_experimental_ssd_us-east2-a.sh
 - interval: 30m
   name: periodic_fast_autoscaling_generate_metrics_file
   agent: kubernetes
   labels:
     preset-k8s-ssh: "true"
     preset-service-account: "true"
   spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180511-51cf02e75-master
      args:
      - --clean
      - --repo=gke-internal.googlesource.com/gke-autoscaling
      - --timeout=20
      - --scenario=execute
      - --upload=gs://gob-prow/logs
      - -- # end bootstrap args, scenario args below
      - /workspace/gke-internal.googlesource.com/gke-autoscaling/test/fast-scaling-tests/generate_metrics_file.sh
   # managed certs in gke jobs
 - interval: 30m
   name: ci-managed-certs-gke-image-build
   agent: kubernetes
   labels:
     preset-service-account: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180511-51cf02e75-master
       args:
       - --clean
       - --repo=gke-internal.googlesource.com/managed-certs-gke
       - --root=/go/src
       - --timeout=30
       - --scenario=execute
       - --upload=gs://gob-prow/logs
       - -- # stop bootstrap flags
       - --env=TAG=ci_latest
       - make
       - --
       - release-ci
       env:
       - name: DOCKER_IN_DOCKER_ENABLED
         value: "true"
       # docker-in-docker needs privileged mode
       securityContext:
         privileged: true
       volumeMounts:
       - name: docker-graph
         mountPath: /docker-graph
     volumes:
     - name: docker-graph
       emptyDir: {}

 - interval: 30m
   name: ci-managed-certs-gke-e2e
   agent: kubernetes
   labels:
     preset-service-account: "true"
     preset-k8s-ssh: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/kubekins-e2e:v20180511-51cf02e75-master
       args:
       - --clean
       - --repo=gke-internal.googlesource.com/managed-certs-gke
       - --root=/go/src
       - --timeout=60
       - --scenario=kubernetes_e2e
       - --upload=gs://gob-prow/logs
       - -- # stop bootstrap flags
       - --check-leaked-resources
       - --cluster=
       - --deployment=gke
       - --extract=gke-latest-1.10
       - --gcp-cloud-sdk=gs://cloud-sdk-testing/ci/staging
       - --gcp-node-image=gci
       - --gcp-zone=us-central1-f
       - --gcp-project=managed-certs-gke
       - --gke-create-command=container clusters create --quiet --scopes=compute-rw
       - --gke-environment=test
       - --provider=gke
       - --test=false
       - --test-cmd=../hack/e2e.sh
       - --timeout=45m

 - interval: 1h
   name: periodic-syllogi-cluster-api-build
   agent: kubernetes
   labels:
     preset-service-account: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
       args:
       - --clean
       - --repo=gke-internal.googlesource.com/syllogi/cluster-management
       - --root=/go/src
       - --upload=gs://syllogi-gob-prow/logs
       - --scenario=execute
       - --
       - /go/src/gke-internal.googlesource.com/syllogi/cluster-management/cluster-api/scripts/ci-build.sh

 - interval: 1h
   name: periodic-syllogi-cluster-api-unittest
   agent: kubernetes
   labels:
     preset-service-account: "true"
     preset-k8s-ssh: "true"
   spec:
     containers:
     - image: gcr.io/k8s-testimages/cluster-api:v20180720-d52d72975
       args:
       - --clean
       - --repo=gke-internal.googlesource.com/syllogi/cluster-management
       - --root=/go/src
       - --upload=gs://syllogi-gob-prow/logs
       - --scenario=execute
       - --
       - /go/src/gke-internal.googlesource.com/syllogi/cluster-management/cluster-api/scripts/ci-test.sh
